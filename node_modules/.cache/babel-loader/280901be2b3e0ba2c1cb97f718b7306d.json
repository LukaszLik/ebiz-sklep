{"ast":null,"code":"var _jsxFileName = \"/home/frsh22/Ebiz-trash/frontend/E-biz-react-hooks/shop/src/components/register/RegisterComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport \"./RegisterComponent.css\";\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function RegisterComponent() {\n  _s();\n\n  const [values, setValues] = React.useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    showPassword: false,\n    message: \"\"\n  });\n  const [errors, setErrors] = React.useState();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n\n    if (prop === \"username\") {\n      validateUsername(event.target.value);\n    } else if (prop === \"email\") {\n      validateEmail(event.target.value);\n    } else if (prop === \"password\") {\n      validatePassword(event.target.value);\n    }\n  };\n\n  const validateEmail = value => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    setErrors({ ...errors,\n      email: \"\"\n    });\n\n    if (value.length === 0) {\n      setErrors({ ...errors,\n        email: \"Email jest wymagany.\"\n      });\n    } else if (!re.test(String(value).toLowerCase())) {\n      setErrors({ ...errors,\n        email: \"Niepoprawny adres email.\"\n      });\n    } else if (value.length > 64) {\n      setErrors({ ...errors,\n        email: \"Email nie powinien mieć więcej niż 64 znaki.\"\n      });\n    }\n  };\n\n  const validateUsername = value => {\n    setErrors({ ...errors,\n      username: \"\"\n    });\n\n    if (value.length === 0) {\n      setErrors({ ...errors,\n        username: \"Nazwa użytkownika jest wymagana.\"\n      });\n    } else if (value.length > 64) {\n      setErrors({ ...errors,\n        username: \"Nazwa użytkownika nie powinna mieć więcej niż 64 znaki.\"\n      });\n    }\n  };\n\n  const validatePassword = value => {\n    setErrors({ ...errors,\n      password: \"\"\n    });\n\n    if (value.length === 0) {\n      setErrors({ ...errors,\n        password: \"Hasło jest wymagane.\"\n      });\n    } else if (!/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()_+,.\\\\/;':\"-]).{8,}$/.test(value)) {\n      setErrors({ ...errors,\n        password: \"Wymagane: 8 znaków, 1 dużą, 1 małą literę, 1 cyfrę i 1 znak secjalny.\"\n      });\n    }\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n    const token = {\n      email: values.email,\n      password: values.password,\n      name: values.username\n    };\n    AuthenticationService.register(token).then(() => {\n      var _AuthenticationServic;\n\n      let id = (_AuthenticationServic = AuthenticationService.getUserDetails()) === null || _AuthenticationServic === void 0 ? void 0 : _AuthenticationServic._id;\n      window.location.href = `/${id}`;\n      enqueueSnackbar(\"Utworzono konto!\");\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setValues({ ...values,\n        message: resMessage\n      });\n      enqueueSnackbar(\"Wystąpił błąd. Spróbuj utworzyć konto ponownie.\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    direction: \"column\",\n    justify: \"center\",\n    style: {\n      minHeight: \"90vh\"\n    },\n    className: \"back-image\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"paperStyle\",\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          paddingBottom: \"0px\",\n          marginTop: \"16px\",\n          marginLeft: \"16%\"\n        },\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-text\",\n          children: \"Zarejestruj si\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"POST\",\n          onSubmit: handleRegister,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              className: \"login-input\",\n              error: Boolean(errors === null || errors === void 0 ? void 0 : errors.username),\n              helperText: errors === null || errors === void 0 ? void 0 : errors.username,\n              id: \"username\",\n              type: \"text\",\n              label: \"Nazwa U\\u017Cytkownika\",\n              placeholder: \"Nazwa U\\u017Cytkownika\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              name: \"username\",\n              onChange: handleChange(\"username\"),\n              value: values.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              className: \"login-input\",\n              error: Boolean(errors === null || errors === void 0 ? void 0 : errors.email),\n              helperText: errors === null || errors === void 0 ? void 0 : errors.email,\n              id: \"email\",\n              type: \"text\",\n              label: \"Email\",\n              placeholder: \"Email\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              name: \"email\",\n              onChange: handleChange(\"email\"),\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              size: \"medium\",\n              className: \"password-input\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                style: {\n                  color: (errors === null || errors === void 0 ? void 0 : errors.password) ? \"red\" : \"gray\"\n                },\n                htmlFor: \"standard-adornment-password\",\n                children: \"Has\\u0142o *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                required: true,\n                id: \"password\",\n                error: Boolean(errors === null || errors === void 0 ? void 0 : errors.password),\n                type: values.showPassword ? \"text\" : \"password\",\n                placeholder: \"Has\\u0142o\",\n                value: values.password,\n                name: \"Has\\u0142o\",\n                onChange: handleChange(\"password\"),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    children: values.showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                style: {\n                  color: (errors === null || errors === void 0 ? void 0 : errors.password) !== \"\" ? \"red\" : \"gray\"\n                },\n                id: \"component-error-text\",\n                children: errors === null || errors === void 0 ? void 0 : errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              style: {\n                minHeight: \"4vh\"\n              },\n              margin: \"normal\",\n              children: values.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: values.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              type: \"submit\",\n              size: \"large\",\n              className: \"register-button\",\n              style: {\n                backgroundColor: \"#303F9F\",\n                color: \"white\",\n                font: \"Roboto\",\n                fontSize: \"14px\",\n                fontStyle: \"medium\"\n              },\n              disabled: Boolean((errors === null || errors === void 0 ? void 0 : errors.password) || (errors === null || errors === void 0 ? void 0 : errors.username) || (errors === null || errors === void 0 ? void 0 : errors.email)),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-login-txt\",\n                children: \"Zarejestruj si\\u0119\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            marginLeft: \"72px\",\n            marginRight: \"72px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-link-des\",\n          children: [\"Masz ju\\u017C konto?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"login-link\",\n            children: \"Zaloguj si\\u0119\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterComponent, \"rGjj1RQugAnKdKZjXoZQpuFqqSA=\", true);\n\n_c = RegisterComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterComponent\");","map":{"version":3,"sources":["/home/frsh22/Ebiz-trash/frontend/E-biz-react-hooks/shop/src/components/register/RegisterComponent.tsx"],"names":["React","TextField","createStyles","makeStyles","IconButton","InputLabel","InputAdornment","Visibility","VisibilityOff","FormControl","Button","useStyles","theme","root","margin","spacing","width","RegisterComponent","values","setValues","useState","email","username","password","showPassword","message","errors","setErrors","enqueueSnackbar","useSnackbar","handleChange","prop","event","target","value","validateUsername","validateEmail","validatePassword","re","length","test","String","toLowerCase","handleMouseDownPassword","preventDefault","handleClickShowPassword","handleRegister","e","token","name","AuthenticationService","register","then","id","getUserDetails","_id","window","location","href","error","resMessage","response","data","toString","minHeight","paddingBottom","marginTop","marginLeft","Boolean","color","backgroundColor","font","fontSize","fontStyle","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport \"./RegisterComponent.css\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport {Button} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n        },\n    }),\n);\n\ninterface State {\n    password: string;\n    showPassword: boolean;\n    name: string;\n    surname: string;\n    email: string;\n}\n\ninterface Error {\n    username: string;\n    email: string;\n    surname: string;\n    password: string;\n\n}\n\nexport default function RegisterComponent() {\n    const [values, setValues] = React.useState<State>({\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        showPassword: false,\n        message: \"\",\n    });\n\n    const [errors, setErrors] = React.useState<any>();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const handleChange =\n        (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n            setValues({ ...values, [prop]: event.target.value });\n\n            if (prop === \"username\") {\n                validateUsername(event.target.value);\n            } else if (prop === \"email\") {\n                validateEmail(event.target.value);\n            } else if (prop === \"password\") {\n                validatePassword(event.target.value);\n            }\n        };\n\n    const validateEmail = (value: any) => {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        setErrors({ ...errors, email: \"\" });\n        if (value.length === 0) {\n            setErrors({ ...errors, email: \"Email jest wymagany.\" });\n        } else if (!re.test(String(value).toLowerCase())) {\n            setErrors({ ...errors, email: \"Niepoprawny adres email.\" });\n        } else if (value.length > 64) {\n            setErrors({\n                ...errors,\n                email: \"Email nie powinien mieć więcej niż 64 znaki.\",\n            });\n        }\n    };\n\n    const validateUsername = (value: any) => {\n        setErrors({ ...errors, username: \"\" });\n        if (value.length === 0) {\n            setErrors({ ...errors, username: \"Nazwa użytkownika jest wymagana.\" });\n        } else if (value.length > 64) {\n            setErrors({\n                ...errors,\n                username: \"Nazwa użytkownika nie powinna mieć więcej niż 64 znaki.\",\n            });\n        }\n    };\n\n    const validatePassword = (value: any) => {\n        setErrors({ ...errors, password: \"\" });\n        if (value.length === 0) {\n            setErrors({ ...errors, password: \"Hasło jest wymagane.\" });\n        } else if (\n            !/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()_+,.\\\\/;':\"-]).{8,}$/.test(\n                value\n            )\n        ) {\n            setErrors({\n                ...errors,\n                password:\n                    \"Wymagane: 8 znaków, 1 dużą, 1 małą literę, 1 cyfrę i 1 znak secjalny.\",\n            });\n        }\n    };\n\n    const handleMouseDownPassword = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        event.preventDefault();\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleRegister = (e: React.FormEvent) => {\n        e.preventDefault();\n        const token = {\n            email: values.email,\n            password: values.password,\n            name: values.username,\n        };\n\n        AuthenticationService.register(token).then(\n            () => {\n                let id = AuthenticationService.getUserDetails()?._id;\n                window.location.href = `/${id}`;\n                enqueueSnackbar(\"Utworzono konto!\");\n            },\n            (error) => {\n                const resMessage =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n                setValues({\n                    ...values,\n                    message: resMessage,\n                });\n                enqueueSnackbar(\"Wystąpił błąd. Spróbuj utworzyć konto ponownie.\");\n            }\n        );\n    };\n\n    return (\n        <Grid\n            container\n            alignItems=\"center\"\n            direction=\"column\"\n            justify=\"center\"\n            style={{ minHeight: \"90vh\" }}\n            className=\"back-image\"\n        >\n            <Card className=\"paperStyle\" variant=\"outlined\">\n                <Box\n                    style={{ paddingBottom: \"0px\", marginTop: \"16px\", marginLeft: \"16%\" }}\n                    display=\"flex\"\n                    justifyContent=\"flex-start\"\n                >\n                    <p className=\"title-text\">Zarejestruj się</p>\n                </Box>\n                <CardContent>\n                    <form method=\"POST\" onSubmit={handleRegister}>\n                        <Grid container direction=\"column\" alignItems=\"center\">\n                            <TextField\n                                required\n                                className=\"login-input\"\n                                error={Boolean(errors?.username)}\n                                helperText={errors?.username}\n                                id=\"username\"\n                                type=\"text\"\n                                label=\"Nazwa Użytkownika\"\n                                placeholder=\"Nazwa Użytkownika\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                name=\"username\"\n                                onChange={handleChange(\"username\")}\n                                value={values.username}\n                            />\n                            <TextField\n                                required\n                                className=\"login-input\"\n                                error={Boolean(errors?.email)}\n                                helperText={errors?.email}\n                                id=\"email\"\n                                type=\"text\"\n                                label=\"Email\"\n                                placeholder=\"Email\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                name=\"email\"\n                                onChange={handleChange(\"email\")}\n                                value={values.email}\n                            />\n                            <FormControl\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                size=\"medium\"\n                                className=\"password-input\"\n                            >\n                                <InputLabel\n                                    style={{ color: errors?.password ? \"red\" : \"gray\" }}\n                                    htmlFor=\"standard-adornment-password\"\n                                >\n                                    Hasło *\n                                </InputLabel>\n                                <OutlinedInput\n                                    required\n                                    id=\"password\"\n                                    error={Boolean(errors?.password)}\n                                    type={values.showPassword ? \"text\" : \"password\"}\n                                    placeholder=\"Hasło\"\n                                    value={values.password}\n                                    name=\"Hasło\"\n                                    onChange={handleChange(\"password\")}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                            >\n                                                {values.showPassword ? (\n                                                    <Visibility />\n                                                ) : (\n                                                    <VisibilityOff />\n                                                )}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                />\n                                <FormHelperText\n                                    style={{ color: errors?.password !== \"\" ? \"red\" : \"gray\" }}\n                                    id=\"component-error-text\"\n                                >\n                                    {errors?.password}\n                                </FormHelperText>\n                            </FormControl>\n                            <Box style={{ minHeight: \"4vh\" }} margin=\"normal\">\n                                {values.message && (\n                                    <div className=\"form-group\">{values.message}</div>\n                                )}\n                            </Box>\n                            <Button\n                                variant=\"contained\"\n                                type=\"submit\"\n                                size=\"large\"\n                                className=\"register-button\"\n                                style={{\n                                    backgroundColor: \"#303F9F\",\n                                    color: \"white\",\n                                    font: \"Roboto\",\n                                    fontSize: \"14px\",\n                                    fontStyle: \"medium\",\n                                }}\n                                disabled={Boolean(\n                                    errors?.password || errors?.username || errors?.email\n                                )}\n                            >\n                                <span className=\"btn-login-txt\">Zarejestruj się</span>\n                            </Button>\n                        </Grid>\n                    </form>\n                </CardContent>\n                <CardContent>\n                    <Divider style={{ marginLeft: \"72px\", marginRight: \"72px\" }} />\n                    <p className=\"login-link-des\">\n                        Masz już konto?{\" \"}\n                        <Link to=\"/login\" className=\"login-link\">\n                            Zaloguj się\n                        </Link>\n                    </p>\n                </CardContent>\n            </Card>\n        </Grid>\n    );\n}"]},"metadata":{},"sourceType":"module"}